{"version":3,"sources":["omdb-results-component.js","omdb-nominations-component.js","omdb-main-component.js","index.js"],"names":["Results","this","props","movies","map","eachMovie","i","key","title","year","onClick","disabled","nominate","moviesList","React","Component","Nominations","nominations","movie","Main","state","imdbID","handleChange","bind","handleSubmit","getData","loadLocalData","temp","localStorage","getItem","JSON","parse","setState","event","target","value","preventDefault","axios","get","then","response","newState","data","Search","catch","error","console","log","movieList","Title","Year","slice","length","push","setItem","stringify","alert","index","delNomination","filter","nom","results","className","onSubmit","type","onChange","handleAdd","handleDelete","ReactDOM","render","basename","process","path","exact","component","document","getElementById"],"mappings":"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","file":"static/js/main.eb60222a.chunk.js","sourcesContent":["//importing modules\r\nimport React from 'react';\r\n\r\n//It creates the movies lists in Results table\r\nexport default class Results extends React.Component{\r\n\r\n    moviesList(){\r\n\r\n        const movie = this.props.movies.map((eachMovie, i) => {\r\n            return (\r\n                <tr key={i}>\r\n                    <td>\r\n                        &#8226; {eachMovie.title} ({eachMovie.year})\r\n                    </td>   \r\n                    <td>\r\n                        <button \r\n                                onClick={() => {this.props.onClick(i)}}\r\n                                disabled={eachMovie.nominate}\r\n                            >\r\n                                Nominee\r\n                        </button> \r\n                    </td>\r\n                </tr>\r\n            )\r\n        });\r\n\r\n        return movie;\r\n    }\r\n    \r\n    //rendering\r\n    render(){\r\n\r\n        return(\r\n            this.moviesList()\r\n        )\r\n    }\r\n\r\n}","//importing modules\r\nimport React from 'react';\r\n\r\n//It creates the Nominations List in Nominations table\r\nfunction Nominations(props){\r\n\r\n    const nominations = \r\n        props.nominations.map((movie, i) => {\r\n            if (i > 0) {\r\n                return(\r\n                <tr key={i}>\r\n                    <td>&#8226; {movie.title} {movie.year}</td>\r\n                    <td><button onClick={() => {props.onClick(i)}}>Remove</button></td>     \r\n                </tr>\r\n                )\r\n            }\r\n            return null;\r\n        })\r\n    return nominations;\r\n}\r\n\r\nexport default Nominations;","//importing modules\r\nimport React from 'react';\r\nimport Results from './omdb-results-component';\r\nimport Nominations from './omdb-nominations-component';\r\nimport axios from 'axios';\r\n\r\n//default Main Class\r\nexport default class Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            movie: '',\r\n            movies: [],\r\n            nominations: [{\r\n                title: \"\",\r\n                year: \"\",\r\n                imdbID: \"\",\r\n            }]\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.getData = this.getData.bind(this);\r\n\r\n    }\r\n\r\n    //mount localstorage data for Nominations\r\n    componentDidMount() {\r\n        this.loadLocalData();\r\n    }\r\n\r\n    //get nominations stored in local storage\r\n    loadLocalData() {\r\n        const temp = localStorage.getItem('nominations');\r\n        const nominations = JSON.parse(temp)\r\n\r\n        if (nominations !== null) {\r\n            this.setState({\r\n                nominations: nominations,\r\n            })\r\n        }\r\n    }\r\n\r\n    //setState from data of textbox\r\n    handleChange(event) {\r\n        this.setState({\r\n            movie: event.target.value\r\n        });\r\n    }\r\n\r\n    //call function to get data from the API using state data\r\n    handleSubmit(event) {\r\n        this.getData();\r\n        event.preventDefault();\r\n    }\r\n\r\n    //get data from API\r\n    getData() {\r\n\r\n        const url = 'https://www.omdbapi.com/?apikey=ae471440&s=';\r\n\r\n        axios.get(url + this.state.movie)\r\n            .then(response => {\r\n                //console.log(response.data);  //debug\r\n                this.newState(response.data.Search);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    //set new state using data from the api\r\n    newState(movies) {\r\n\r\n        const movieList = movies.map(movie => {\r\n            return (\r\n                {\r\n                    title: movie.Title,\r\n                    year: movie.Year,\r\n                    imdbID: movie.imdbID,\r\n                    nominate: false,\r\n                }\r\n            )\r\n        })\r\n\r\n        this.setState({\r\n            movies: movieList.slice(1),\r\n        })\r\n    }\r\n\r\n    //handling Nominee Button events and adding movies to Nominations\r\n    handleAdd(i) {\r\n        let nominations = this.state.nominations.slice();\r\n        let movies = this.state.movies.slice();\r\n\r\n        if (nominations.length <= 5) {\r\n            movies[i] = {\r\n                title: this.state.movies[i].title,\r\n                year: this.state.movies[i].year,\r\n                imdbID: this.state.movies[i].imdbID,\r\n                nominate: true,\r\n            }\r\n\r\n            nominations.push({\r\n                title: this.state.movies[i].title,\r\n                year: this.state.movies[i].year,\r\n                imdbID: this.state.movies[i].imdbID,\r\n            })\r\n\r\n            this.setState({\r\n                movies: movies,\r\n                nominations: nominations\r\n            })\r\n\r\n            localStorage.setItem('nominations', JSON.stringify(nominations));\r\n        }\r\n        else\r\n            alert('Maximum nominations is 5')\r\n    }\r\n\r\n    //handling Remove Button events to delete Nominated Movies\r\n    handleDelete(index) {\r\n\r\n        const nominations = this.state.nominations;\r\n        const delNomination = nominations.filter((nom, i) =>\r\n            i !== index\r\n        )\r\n\r\n        const movies = this.state.movies.slice();\r\n\r\n        for (let i = 0; i < movies.length; i++) {\r\n            if (nominations[index].imdbID === movies[i].imdbID)\r\n                movies[i].nominate = false\r\n        }\r\n\r\n        localStorage.setItem('nominations', JSON.stringify(delNomination));\r\n\r\n        this.setState({\r\n            movies: movies,\r\n            nominations: delNomination\r\n        })\r\n    }\r\n\r\n\r\n    //Rendering\r\n    render() {\r\n\r\n        const movies = this.state.movies.slice();\r\n\r\n        const results = this.state.movie ? `\"${this.state.movie}\"` : null;\r\n\r\n        return (\r\n            <div className='container'>\r\n                <h3 className='mt-5'>The Shoppies</h3>\r\n                <div className='d-flex bg-white p-4'>\r\n                    <div className=\"col-12\">\r\n                        <h6>Movie Title</h6>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <input className='col-11' type=\"text\" value={this.state.movie} onChange={this.handleChange} />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div className='d-flex bg-white mt-2'>\r\n                    <div className='col-6'>\r\n                        <div>\r\n                            <h6>\r\n                                Results for {results}\r\n                            </h6>\r\n                        </div>\r\n                        <table className=\"table table-hover\">\r\n                            <tbody>\r\n                                <Results\r\n                                    movies={movies}\r\n                                    onClick={(i) => { this.handleAdd(i) }}\r\n                                />\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className='col-6'>\r\n                        <div>\r\n                            <h6>\r\n                                Nominations\r\n                            </h6>\r\n                            <table className=\"table table-hover\">\r\n                                <tbody>\r\n                                    <Nominations\r\n                                        nominations={this.state.nominations}\r\n                                        onClick={(i) => { this.handleDelete(i) }}\r\n                                    />\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport Main from './omdb-main-component';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\n\nReactDOM.render(\n<Router basename={process.env.PUBLIC_URL}><Route path='/' exact component={Main} /></Router>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}