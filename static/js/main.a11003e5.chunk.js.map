{"version":3,"sources":["components/omdb-results-component.js","components/omdb-nominations-component.js","components/omdb-main-component.js","index.js"],"names":["Results","this","props","movies","map","eachMovie","i","key","title","year","onClick","disabled","nominate","moviesList","React","Component","Nominations","nominations","movie","Main","state","imdbID","handleChange","bind","handleSubmit","getData","loadLocalData","temp","localStorage","getItem","JSON","parse","setState","event","target","value","preventDefault","axios","get","then","response","newState","data","Search","catch","error","console","log","movieList","Title","Year","slice","length","push","setItem","stringify","alert","index","delNomination","filter","nom","results","className","onSubmit","type","onChange","handleAdd","handleDelete","ReactDOM","render","basename","process","path","exact","component","document","getElementById"],"mappings":"+PAIqBA,E,2KACL,IAAD,OAqBX,OApBcC,KAAKC,MAAMC,OAAOC,KAAI,SAACC,EAAWC,GAC9C,OACE,wBAAIC,IAAKD,GACP,sCACWD,EAAUG,MADrB,KAC8BH,EAAUI,KADxC,KAGA,4BACE,4BACEC,QAAS,WACP,EAAKR,MAAMQ,QAAQJ,IAErBK,SAAUN,EAAUO,UAJtB,kB,+BAkBR,OAAOX,KAAKY,iB,GA3BqBC,IAAMC,WCyB5BC,MAzBf,SAAqBd,GAsBnB,OArBoBA,EAAMe,YAAYb,KAAI,SAACc,EAAOZ,GAChD,OAAIA,EAAI,EAEJ,wBAAIC,IAAKD,GACP,sCACWY,EAAMV,MADjB,IACyBU,EAAMT,MAE/B,4BACE,4BACEC,QAAS,WACPR,EAAMQ,QAAQJ,KAFlB,YAWD,S,iBCjBUa,E,kDACnB,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IACDkB,MAAQ,CACXF,MAAO,GACPf,OAAQ,GACRc,YAAa,CACX,CACET,MAAO,GACPC,KAAM,GACNY,OAAQ,MAKd,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,QAAU,EAAKA,QAAQF,KAAb,gBAhBE,E,gEAqBjBtB,KAAKyB,kB,sCAKL,IAAMC,EAAOC,aAAaC,QAAQ,eAC5BZ,EAAca,KAAKC,MAAMJ,GAEX,OAAhBV,GACFhB,KAAK+B,SAAS,CACZf,YAAaA,M,mCAMNgB,GACXhC,KAAK+B,SAAS,CACZd,MAAOe,EAAMC,OAAOC,U,mCAKXF,GACXhC,KAAKwB,UACLQ,EAAMG,mB,gCAIG,IAAD,OAGRC,IACGC,IAHS,8CAGCrC,KAAKmB,MAAMF,OACrBqB,MAAK,SAACC,GAEL,EAAKC,SAASD,EAASE,KAAKC,WAE7BC,OAAM,SAACC,GACNC,QAAQC,IAAIF,Q,+BAKT1C,GACP,IAAM6C,EAAY7C,EAAOC,KAAI,SAACc,GAC5B,MAAO,CACLV,MAAOU,EAAM+B,MACbxC,KAAMS,EAAMgC,KACZ7B,OAAQH,EAAMG,OACdT,UAAU,MAIdX,KAAK+B,SAAS,CACZ7B,OAAQ6C,EAAUG,MAAM,O,gCAKlB7C,GACR,IAAIW,EAAchB,KAAKmB,MAAMH,YAAYkC,QACrChD,EAASF,KAAKmB,MAAMjB,OAAOgD,QAE3BlC,EAAYmC,QAAU,GACxBjD,EAAOG,GAAK,CACVE,MAAOP,KAAKmB,MAAMjB,OAAOG,GAAGE,MAC5BC,KAAMR,KAAKmB,MAAMjB,OAAOG,GAAGG,KAC3BY,OAAQpB,KAAKmB,MAAMjB,OAAOG,GAAGe,OAC7BT,UAAU,GAGZK,EAAYoC,KAAK,CACf7C,MAAOP,KAAKmB,MAAMjB,OAAOG,GAAGE,MAC5BC,KAAMR,KAAKmB,MAAMjB,OAAOG,GAAGG,KAC3BY,OAAQpB,KAAKmB,MAAMjB,OAAOG,GAAGe,SAG/BpB,KAAK+B,SAAS,CACZ7B,OAAQA,EACRc,YAAaA,IAGfW,aAAa0B,QAAQ,cAAexB,KAAKyB,UAAUtC,KAC9CuC,MAAM,8B,mCAIFC,GAMX,IALA,IAAMxC,EAAchB,KAAKmB,MAAMH,YACzByC,EAAgBzC,EAAY0C,QAAO,SAACC,EAAKtD,GAAN,OAAYA,IAAMmD,KAErDtD,EAASF,KAAKmB,MAAMjB,OAAOgD,QAExB7C,EAAI,EAAGA,EAAIH,EAAOiD,OAAQ9C,IAC7BW,EAAYwC,GAAOpC,SAAWlB,EAAOG,GAAGe,SAC1ClB,EAAOG,GAAGM,UAAW,GAGzBgB,aAAa0B,QAAQ,cAAexB,KAAKyB,UAAUG,IAEnDzD,KAAK+B,SAAS,CACZ7B,OAAQA,EACRc,YAAayC,M,+BAKP,IAAD,OACDvD,EAASF,KAAKmB,MAAMjB,OAAOgD,QAE3BU,EAAU5D,KAAKmB,MAAMF,MAAX,WAAuBjB,KAAKmB,MAAMF,MAAlC,KAA6C,KAE7D,OACE,yBAAK4C,UAAU,iBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,WACb,8CAGJ,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,6CAGJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,0BAAMC,SAAU9D,KAAKuB,cACnB,2BACEsC,UAAU,MACVE,KAAK,OACL7B,MAAOlC,KAAKmB,MAAMF,MAClB+C,SAAUhE,KAAKqB,mBAMzB,yBAAKwC,UAAU,WACb,yBAAKA,UAAU,oCACb,2CAAiBD,GACjB,2BAAOC,UAAU,qBACf,+BACE,kBAAC,EAAD,CACE3D,OAAQA,EACRO,QAAS,SAACJ,GACR,EAAK4D,UAAU5D,SAMzB,yBAAKwD,UAAU,oCACb,2CACA,2BAAOA,UAAU,qBACf,+BACE,kBAAC,EAAD,CACE7C,YAAahB,KAAKmB,MAAMH,YACxBP,QAAS,SAACJ,GACR,EAAK6D,aAAa7D,e,GAtLJQ,IAAMC,W,eCAxCqD,IAASC,OACT,kBAAC,IAAD,CAAQC,SAAUC,mBAAwB,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWvD,KACzEwD,SAASC,eAAe,W","file":"static/js/main.a11003e5.chunk.js","sourcesContent":["//importing modules\r\nimport React from \"react\";\r\n\r\n//It creates the movies lists in Results table\r\nexport default class Results extends React.Component {\r\n  moviesList() {\r\n    const movie = this.props.movies.map((eachMovie, i) => {\r\n      return (\r\n        <tr key={i}>\r\n          <td>\r\n            &#8226; {eachMovie.title} ({eachMovie.year})\r\n          </td>\r\n          <td>\r\n            <button\r\n              onClick={() => {\r\n                this.props.onClick(i);\r\n              }}\r\n              disabled={eachMovie.nominate}\r\n            >\r\n              Nominee\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n\r\n    return movie;\r\n  }\r\n\r\n  //rendering\r\n  render() {\r\n    return this.moviesList();\r\n  }\r\n}\r\n","//importing modules\r\nimport React from \"react\";\r\n\r\n//It creates the Nominations List in Nominations table\r\nfunction Nominations(props) {\r\n  const nominations = props.nominations.map((movie, i) => {\r\n    if (i > 0) {\r\n      return (\r\n        <tr key={i}>\r\n          <td>\r\n            &#8226; {movie.title} {movie.year}\r\n          </td>\r\n          <td>\r\n            <button\r\n              onClick={() => {\r\n                props.onClick(i);\r\n              }}\r\n            >\r\n              Remove\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      );\r\n    }\r\n    return null;\r\n  });\r\n  return nominations;\r\n}\r\n\r\nexport default Nominations;\r\n","//importing modules\r\nimport React from \"react\";\r\nimport Results from \"./omdb-results-component\";\r\nimport Nominations from \"./omdb-nominations-component\";\r\nimport axios from \"axios\";\r\n\r\n//default Main Class\r\nexport default class Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      movie: \"\",\r\n      movies: [],\r\n      nominations: [\r\n        {\r\n          title: \"\",\r\n          year: \"\",\r\n          imdbID: \"\",\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.getData = this.getData.bind(this);\r\n  }\r\n\r\n  //mount localstorage data for Nominations\r\n  componentDidMount() {\r\n    this.loadLocalData();\r\n  }\r\n\r\n  //get nominations stored in local storage\r\n  loadLocalData() {\r\n    const temp = localStorage.getItem(\"nominations\");\r\n    const nominations = JSON.parse(temp);\r\n\r\n    if (nominations !== null) {\r\n      this.setState({\r\n        nominations: nominations,\r\n      });\r\n    }\r\n  }\r\n\r\n  //setState from data of textbox\r\n  handleChange(event) {\r\n    this.setState({\r\n      movie: event.target.value,\r\n    });\r\n  }\r\n\r\n  //call function to get data from the API using state data\r\n  handleSubmit(event) {\r\n    this.getData();\r\n    event.preventDefault();\r\n  }\r\n\r\n  //get data from API\r\n  getData() {\r\n    const url = \"https://www.omdbapi.com/?apikey=ae471440&s=\";\r\n\r\n    axios\r\n      .get(url + this.state.movie)\r\n      .then((response) => {\r\n        //console.log(response.data);  //debug\r\n        this.newState(response.data.Search);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  //set new state using data from the api\r\n  newState(movies) {\r\n    const movieList = movies.map((movie) => {\r\n      return {\r\n        title: movie.Title,\r\n        year: movie.Year,\r\n        imdbID: movie.imdbID,\r\n        nominate: false,\r\n      };\r\n    });\r\n\r\n    this.setState({\r\n      movies: movieList.slice(1),\r\n    });\r\n  }\r\n\r\n  //handling Nominee Button events and adding movies to Nominations\r\n  handleAdd(i) {\r\n    let nominations = this.state.nominations.slice();\r\n    let movies = this.state.movies.slice();\r\n\r\n    if (nominations.length <= 5) {\r\n      movies[i] = {\r\n        title: this.state.movies[i].title,\r\n        year: this.state.movies[i].year,\r\n        imdbID: this.state.movies[i].imdbID,\r\n        nominate: true,\r\n      };\r\n\r\n      nominations.push({\r\n        title: this.state.movies[i].title,\r\n        year: this.state.movies[i].year,\r\n        imdbID: this.state.movies[i].imdbID,\r\n      });\r\n\r\n      this.setState({\r\n        movies: movies,\r\n        nominations: nominations,\r\n      });\r\n\r\n      localStorage.setItem(\"nominations\", JSON.stringify(nominations));\r\n    } else alert(\"Maximum nominations is 5\");\r\n  }\r\n\r\n  //handling Remove Button events to delete Nominated Movies\r\n  handleDelete(index) {\r\n    const nominations = this.state.nominations;\r\n    const delNomination = nominations.filter((nom, i) => i !== index);\r\n\r\n    const movies = this.state.movies.slice();\r\n\r\n    for (let i = 0; i < movies.length; i++) {\r\n      if (nominations[index].imdbID === movies[i].imdbID)\r\n        movies[i].nominate = false;\r\n    }\r\n\r\n    localStorage.setItem(\"nominations\", JSON.stringify(delNomination));\r\n\r\n    this.setState({\r\n      movies: movies,\r\n      nominations: delNomination,\r\n    });\r\n  }\r\n\r\n  //Rendering\r\n  render() {\r\n    const movies = this.state.movies.slice();\r\n\r\n    const results = this.state.movie ? `\"${this.state.movie}\"` : null;\r\n\r\n    return (\r\n      <div className=\"container m-4\">\r\n        <div className=\"row\">\r\n          <div className=\"col m-2\">\r\n            <h3>The Shoppies</h3>\r\n          </div>\r\n        </div>\r\n        <div className=\"input-box bg-white m-2 p-4\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <h6>Movie Title</h6>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <form onSubmit={this.handleSubmit}>\r\n                <input\r\n                  className=\"col\"\r\n                  type=\"text\"\r\n                  value={this.state.movie}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row m-2\">\r\n          <div className=\"col mr-2 p-3 min-vh-100 bg-white\">\r\n            <h6>Results for {results}</h6>\r\n            <table className=\"table table-hover\">\r\n              <tbody>\r\n                <Results\r\n                  movies={movies}\r\n                  onClick={(i) => {\r\n                    this.handleAdd(i);\r\n                  }}\r\n                />\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div className=\"col ml-2 p-3 min-vh-100 bg-white\">\r\n            <h6>Nominations</h6>\r\n            <table className=\"table table-hover\">\r\n              <tbody>\r\n                <Nominations\r\n                  nominations={this.state.nominations}\r\n                  onClick={(i) => {\r\n                    this.handleDelete(i);\r\n                  }}\r\n                />\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './static/css/style.css'\nimport Main from './components/omdb-main-component';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\n\nReactDOM.render(\n<Router basename={process.env.PUBLIC_URL}><Route path='/' exact component={Main} /></Router>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}